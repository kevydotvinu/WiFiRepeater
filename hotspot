#!/bin/bash
#
# NAME
#	Create WiFi AP / WiFi repeater
#
# SYNOPSIS
#	hotspot wlan0 start
#
# DESCRIBTION
#	It creates in-build/usb WiFi into access point or repeater.
#
# CHANGELOG
#	- Fri Mar 27 2020 <kevy.vinu@gmail.com>
#	* Original Code

OPERATION="${1}"
IFACE="${2}" && ip link show ${2} > /dev/null 2>&1 || OPERATION="help"
[[ "${#}" == 2 ]] || OPERATION="help"
AP="ap0"
LINK="up" && ip link show ${AP} > /dev/null 2>&1 || LINK="down"
CREDFILE="$HOME/.config/hotspot/credentials.conf"
[[ `command -v dnsmasq iw hostapd ip | wc -w` == 4 ]] || OPERATION="prereq"

mkdir -p $HOME/{.local/{etc,bin},.config/hotspot}

function checkCred() {
if [ -f "${CREDFILE}" ]; then
	source "${CREDFILE}"
	NID="${NID:-192.168.18.0}"
	NID="$(echo $NID | cut -d"." -f1-3)"
else
	read -p "Enter network for ${IFACE} [192.168.18.0] (leave it blank for default): " NID
	read -p "Enter SSID for hotspot (do not leave it blank): " SSID
	read -p "Enter PASSPHRASE for hotspot (do not leave it blank): " PASSPHRASE
	echo "To reset SSID/PASSPHRASE, run: hotspot reset"
	echo "NID=${NID}" | tee ${CREDFILE}
	echo "SSID=${SSID}" | tee -a ${CREDFILE}
	echo "PASSPHRASE=${PASSPHRASE}" | tee -a ${CREDFILE}
fi
}

function dnsmasqConfig() {
	cat << EOF > $HOME/.local/etc/dnsmasq.conf
bind-interfaces
server=8.8.8.8
dhcp-range=${NID}.50,${NID}.100,255.255.255.0,12h
log-dhcp
log-queries
log-facility=/tmp/dnsmasq.log
dhcp-leasefile=/tmp/dnsmasq.leases
EOF
}

function hostapdConfig() {
	cat << EOF > $HOME/.local/etc/hostapd.conf
driver=nl80211
ssid=${SSID}
hw_mode=g
channel=7
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=${PASSPHRASE}
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
EOF
}

function start() {
if [ "${LINK}" == down ]; then
	sudo iw dev $IFACE interface add ${AP} type managed addr 12:34:56:78:ab:cd
	sudo nmcli device set ${AP} managed no
	sudo ip addr add ${NID}.1/24 dev ${AP}
	sudo pkill -F /var/run/dnsmasq.hotspot.pid > /dev/null 2>&1
	sudo dnsmasq -x /var/run/dnsmasq.hotspot.pid -i ${AP} -I lo -C $HOME/.local/etc/dnsmasq.conf
	sudo pkill -F /var/run/hostapd.hotspot.pid > /dev/null 2>&1
	sudo hostapd -P /var/run/hostapd.hotspot.pid -i ${AP} -B $HOME/.local/etc/hostapd.conf
	sudo iptables -t nat -D POSTROUTING -s ${NID}.0/24 -j MASQUERADE > /dev/null 2>&1
	sudo iptables -t nat -I POSTROUTING 1 -s ${NID}.0/24 -j MASQUERADE
	sudo iptables -D INPUT -i ${AP} -p udp -m udp --dport 53 -j ACCEPT > /dev/null 2>&1
	sudo iptables -I INPUT 1 -i ${AP} -p udp -m udp --dport 53 -j ACCEPT
	sudo iptables -D INPUT -i ${AP} -p tcp -m tcp --dport 53 -j ACCEPT > /dev/null 2>&1
	sudo iptables -I INPUT 1 -i ${AP} -p tcp -m tcp --dport 53 -j ACCEPT
	sudo iptables -D INPUT -i ${AP} -p udp -m udp --dport 67 -j ACCEPT > /dev/null 2>&1
	sudo iptables -I INPUT 1 -i ${AP} -p udp -m udp --dport 67 -j ACCEPT
	sudo iptables -D INPUT -i ${AP} -p tcp -m tcp --dport 67 -j ACCEPT > /dev/null 2>&1
	sudo iptables -I INPUT 1 -i ${AP} -p tcp -m tcp --dport 67 -j ACCEPT
	echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward > /dev/null 2>&1
else
	echo "hotspot is running on ${IFACE}"
	echo "try: hotspot $IFACE stop && hotspot $IFACE start"
fi
}

function stop() {
if [ "${LINK}" == up ]; then
	sudo iw dev ${AP} del > /dev/null 2>&1
	sudo pkill -F /var/run/dnsmasq.hotspot.pid > /dev/null 2>&1
	sudo pkill -F /var/run/hostapd.hotspot.pid > /dev/null 2>&1
	sudo iptables -t nat -D POSTROUTING -j MASQUERADE > /dev/null 2>&1
	echo 0 | sudo tee /proc/sys/net/ipv4/ip_forward > /dev/null 2>&1
else
	echo "hotspot is stopped on ${IFACE}"
fi
}

function reset() {
	rm -f "${CREDFILE}"
}

function status() {
ps -eo cmd | grep "\-[i] ${AP}" || \
	echo "hotspot is stopped"
}

case $OPERATION in
	start)
		checkCred
		dnsmasqConfig
		hostapdConfig
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	reset)
		reset
		checkCred
		hostapdConfig
		echo "Restart hotspot:"
		echo "hotspot stop ${IFACE} && hotspot start ${IFACE}"
		;;
	help)
		echo "USAGE: hotspot <start|stop|status|reset> <wireless interface name>"
		echo "EXAMPLE: hostapd start wlan0"
		;;
	prereq)
		echo "Ensure following packages are installed:"
		echo "dnsmasq, hostapd, iproute2 and iw"
		;;
	*)
		echo "USAGE: hotspot <start|stop|status|reset> <wireless interface name>"
		echo "EXAMPLE: hostapd start wlan0"
		;;
esac
